{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"location": {
			"type": "string",
			"defaultValue": "West Europe",
			"metadata": {
				"description": "region of resources"
			}
		},
		"newStorageAccount": {
			"type": "string",
			"metadata": {
				"description": "Globally unique lowercase name of your storage account"
			}
		},
		"storageAccountType": {
			"type": "string",
			"metadata": {
				"description": "The type of the Storage Account created"
			},
			"defaultValue": "Premium_LRS"
		},
		"storageAccountNewOrExisting": {
			"type": "string",
			"defaultValue": "new",
			"allowedValues": ["new",
			"existing"],
			"metadata": {
				"Description": "Indicates whether the Storage Account is new or existing"
			}
		},
		"existingStorageAccountRG": {
			"type": "string",
			"defaultValue": "",
			"metadata": {
				"description": "Storage Resource Group of the Existing VM."
			}
		},
		"dnsNameForPublicIP": {
			"type": "string",
			"metadata": {
				"description": "Globally unique DNS name to access management interface of VM-Series firewall"
			}
		},
		"vmName": {
			"type": "string",
			"metadata": {
				"description": "Name of VM-Series VM in the Azure portal"
			}
		},
		"adminUserName": {
			"type": "string",
			"metadata": {
				"description": "Username for VM-Series administrator"
			}
		},
		"adminPassword": {
			"type": "securestring",
			"metadata": {
				"description": "Password for VM-Series administrator"
			}
		},
		"authenticationType": {
			"type": "string",
			"metadata": {
				"descritpion": "Type of authentication "
			},
			"allowedValues": ["sshPublicKey",
			"password"],
			"defaultValue": "password"
		},
		"sshKey": {
			"type": "string",
			"defaultValue": "",
			"metadata": {
				"description": "SSH RSA public key file as a string."
			}
		},
		"imageVersion": {
			"type": "string",
			"defaultValue": "latest",
			"allowedValues": ["7.1.1",
			"8.0.0"],
			"metadata": {
				"description": "PAN-OS version."
			}
		},
		"imageSku": {
			"type": "string",
			"defaultValue": "byol",
			"allowedValues": ["byol",
			"bundle1",
			"bundle2"],
			"metadata": {
				"description": "VM-Series model: BYOL or hourly pay-as-you-go (PAYG): Bundle 1 or Bundle 2"
			}
		},
		"vmSize": {
			"type": "string",
			"defaultValue": "Standard_DS4_v2",
			"allowedValues": ["Standard_DS4_v2",
			"Standard_DS5_v2",
			],
			"metadata": {
				"description": "Azure VM size for VM-Series"
			}
		},
		"availabilitySetName": {
			"type": "string",
			"defaultValue": "avsetfwpan",
			"metadata": {
				"description": "Azure Availability Set for VM firewalls"
			}
		},
		"availabilitySetPlatformFaultDomainCount": {
			"type": "string",
			"defaultValue": "2"
		},
		"availabilitySetPlatformUpdateDomainCount": {
			"type": "string",
			"defaultValue": "5"
		},
		"srcIPInboundNSG": {
			"type": "string",
			"metadata": {
				"description": "Your source public IP address. Added to the restrict inbound DefaultNSG on eth0 (MGMT)"
			},
			"defaultValue": "0.0.0.0/0"
		},
		"baseUrl": {
			"type": "string",
			"metadata": {
				"artifactsBaseUrl": ""
			},
			"defaultValue": "https://raw.githubusercontent.com/michelvankessel/azure/master/demo-vmseries-avset"
		},
		"virtualNetworkName": {
			"type": "string",
			"metadata": {
				"description": "Name of the virtual network that the consumer wants to use"
			},
			"defaultValue": "vnetpan"
		},
		"virtualNetworkAddressPrefix": {
			"type": "string",
			"defaultValue": "192.168.0.0/16",
			"metadata": {
				"description": "Virtual network address CIDR"
			}
		},
		"subnet0Name": {
			"type": "string",
			"defaultValue": "Mgmt",
			"metadata": {
				"description": "Subnet for the Mgmt"
			}
		},
		"subnet1Name": {
			"type": "string",
			"defaultValue": "Untrust",
			"metadata": {
				"description": "Subnet for the Untrust"
			}
		},
		"subnet2Name": {
			"type": "string",
			"defaultValue": "Trust",
			"metadata": {
				"description": "Subnet for the Trust"
			}
		},
		"subnet3Name": {
			"type": "string",
			"defaultValue": "DMZ",
			"metadata": {
				"description": "Subnet for the DMZ"
			}
		},
		"subnet4Name": {
			"type": "string",
			"defaultValue": "ExpressRoute",
			"metadata": {
				"description": "Subnet for the ExpressRoute"
			}
		},
		"subnet5Name": {
			"type": "string",
			"defaultValue": "Future1",
			"metadata": {
				"description": "Subnet for the Future1"
			}
		},
		"subnet6Name": {
			"type": "string",
			"defaultValue": "Future2",
			"metadata": {
				"description": "Subnet for the Future2"
			}
		},
		"subnet7Name": {
			"type": "string",
			"defaultValue": "Future3",
			"metadata": {
				"description": "Subnet for the Future3"
			}
		},
		"subnet0Prefix": {
			"type": "string",
			"defaultValue": "192.168.1.0/24",
			"metadata": {
				"description": "Mgmt subnet CIDR"
			}
		},
		"subnet1Prefix": {
			"type": "string",
			"defaultValue": "192.168.2.0/24",
			"metadata": {
				"description": "Untrust subnet CIDR"
			}
		},
		"subnet2Prefix": {
			"type": "string",
			"defaultValue": "192.168.3.0/24",
			"metadata": {
				"description": "Trust subnet CIDR"
			}
		},
		"subnet3Prefix": {
			"type": "string",
			"defaultValue": "192.168.4.0/24",
			"metadata": {
				"description": "Trust subnet DMZ"
			}
		},
		"subnet4Prefix": {
			"type": "string",
			"defaultValue": "192.168.5.0/24",
			"metadata": {
				"description": "Trust subnet ExpressRoute"
			}
		},
		"subnet5Prefix": {
			"type": "string",
			"defaultValue": "192.168.6.0/24",
			"metadata": {
				"description": "Trust subnet Future1"
			}
		},
		"subnet6Prefix": {
			"type": "string",
			"defaultValue": "192.168.7.0/24",
			"metadata": {
				"description": "Trust subnet Future2"
			}
		},
		"subnet7Prefix": {
			"type": "string",
			"defaultValue": "192.168.8.0/24",
			"metadata": {
				"description": "Trust subnet Future3"
			}
		},
		"subnet0StartAddress": {
			"type": "string",
			"defaultValue": "192.168.1.4",
			"metadata": {
				"description": "Mgmt subnet start address"
			}
		},
		"subnet1StartAddress": {
			"type": "string",
			"defaultValue": "192.168.2.4",
			"metadata": {
				"description": "Untrust subnet start address"
			}
		},
		"subnet2StartAddress": {
			"type": "string",
			"defaultValue": "192.168.3.4",
			"metadata": {
				"description": "Trust subnet start address"
			}
		},
		"subnet3StartAddress": {
			"type": "string",
			"defaultValue": "192.168.4.4",
			"metadata": {
				"description": "DMZ subnet start address"
			}
		},
		"subnet4StartAddress": {
			"type": "string",
			"defaultValue": "192.168.5.4",
			"metadata": {
				"description": "ExpressRoute subnet start address"
			}
		},
		"subnet5StartAddress": {
			"type": "string",
			"defaultValue": "192.168.6.4",
			"metadata": {
				"description": "Future1 subnet start address"
			}
		},
		"subnet6StartAddress": {
			"type": "string",
			"defaultValue": "192.168.7.4",
			"metadata": {
				"description": "Future2 subnet start address"
			}
		},
		"subnet7StartAddress": {
			"type": "string",
			"defaultValue": "192.168.8.4",
			"metadata": {
				"description": "Future3 subnet start address"
			}
		}
	},
	"variables": {
		"apiVersion": "2017-06-01",
		"imagePublisher": "paloaltonetworks",
		"imageOffer": "vmseries1",
		"fwpublicIPName": "[concat(parameters('vmName'), '-fwMgmtPublicIP')]",
		"nicName": "[concat(parameters('vmName'), '-eth')]",
		"FWPrivateIPAddressUntrust": "[parameters('subnet1StartAddress')]",
		"FWPrivateIPAddressTrust": "[parameters('subnet2StartAddress')]",
		"FWPrivateIPAddressDMZ": "[parameters('subnet3StartAddress')]",
		"FWPrivateIPAddressExpressRoute": "[parameters('subnet4StartAddress')]",
		"FWPrivateIPAddressFuture1": "[parameters('subnet5StartAddress')]",
		"FWPrivateIPAddressFuture2": "[parameters('subnet6StartAddress')]",
		"FWPrivateIPAddressFuture3": "[parameters('subnet7StartAddress')]",
		"publicIPAddressType": "Dynamic",
		"vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
		"nsgname-mgmt": "[concat(parameters('vmName'), '-DefaultNSG')]",
		"subnet0Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet0Name'))]",
		"subnet1Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet1Name'))]",
		"subnet2Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet2Name'))]",
		"subnet3Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet3Name'))]",
		"subnet4Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet4Name'))]",
		"subnet5Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet5Name'))]",
		"subnet6Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet6Name'))]",
		"subnet7Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet7Name'))]",
		"storageAccountSetupURL": "[concat(parameters('baseUrl'),'/storageAccount-',parameters('storageAccountNewOrExisting'),'.json')]",
		"vmTemplateUrl": "[concat(parameters('baseUrl'), '/virtual-machine-', parameters('authenticationType'),'.json')]"
	},
	"resources": [{
		"name": "storageAcountSetup1",
		"type": "Microsoft.Resources/deployments",
		"apiVersion": "2015-01-01",
		"properties": {
			"mode": "Incremental",
			"templateLink": {
				"uri": "[variables('storageAccountSetupURL')]",
				"contentVersion": "1.0.0.0"
			},
			"parameters": {
				"location": {
					"value": "[parameters('location')]"
				},
				"storageAccountType": {
					"value": "[parameters('storageAccountType')]"
				},
				"newStorageAccount": {
					"value": "[parameters('newStorageAccount')]"
				},
				"storageAccountExistingRG": {
					"value": "[parameters('existingStorageAccountRG')]"
				}
			}
		}
	},
	{
		"apiVersion": "2016-04-30-preview",
		"type": "Microsoft.Compute/availabilitySets",
		"name": "[parameters('availabilitySetName')]",
		"location": "[resourceGroup().location]",
		"properties": {
			"platformFaultDomainCount": "[parameters('availabilitySetPlatformFaultDomainCount')]",
			"platformUpdateDomainCount": "[parameters('availabilitySetPlatformUpdateDomainCount')]",
			"managed": true
		}
	},
	{
		"apiVersion": "[variables('apiVersion')]",
		"type": "Microsoft.Network/publicIPAddresses",
		"name": "[variables('fwpublicIPName')]",
		"location": "[parameters('location')]",
		"properties": {
			"publicIPAllocationMethod": "[variables('publicIPAddressType')]",
			"dnsSettings": {
				"domainNameLabel": "[parameters('dnsNameForPublicIP')]"
			}
		}
	},
	{
		"apiVersion": "[variables('apiVersion')]",
		"type": "Microsoft.Network/networkSecurityGroups",
		"name": "[concat(parameters('vmName'), '-DefaultNSG')]",
		"location": "[parameters('location')]",
		"properties": {
			"securityRules": [{
				"name": "Allow-Outside-From-IP",
				"properties": {
					"description": "Rule",
					"protocol": "*",
					"sourcePortRange": "*",
					"destinationPortRange": "*",
					"sourceAddressPrefix": "[parameters('srcIPInboundNSG')]",
					"destinationAddressPrefix": "*",
					"access": "Allow",
					"priority": 100,
					"direction": "Inbound"
				}
			},
			{
				"name": "Allow-Intra",
				"properties": {
					"description": "Allow intra network traffic",
					"protocol": "*",
					"sourcePortRange": "*",
					"destinationPortRange": "*",
					"sourceAddressPrefix": "[concat(parameters('virtualNetworkAddressPrefix'))]",
					"destinationAddressPrefix": "*",
					"access": "Allow",
					"priority": 101,
					"direction": "Inbound"
				}
			},
			{
				"name": "Default-Deny",
				"properties": {
					"description": "Default-Deny if we don't match Allow rule",
					"protocol": "*",
					"sourcePortRange": "*",
					"destinationPortRange": "*",
					"sourceAddressPrefix": "*",
					"destinationAddressPrefix": "*",
					"access": "Deny",
					"priority": 200,
					"direction": "Inbound"
				}
			}]
		}
	},
	{
		"apiVersion": "[variables('apiVersion')]",
		"type": "Microsoft.Network/virtualNetworks",
		"name": "[parameters('virtualNetworkName')]",
		"location": "[parameters('location')]",
		"dependsOn": ["[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgname-mgmt'))]"],
		"properties": {
			"addressSpace": {
				"addressPrefixes": ["[parameters('virtualNetworkAddressPrefix')]"]
			},
			"subnets": [{
				"name": "[parameters('subnet0Name')]",
				"properties": {
					"addressPrefix": "[parameters('subnet0Prefix')]",
					"networkSecurityGroup": {
						"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgname-mgmt'))]"
					}
				}
			},
			{
				"name": "[parameters('subnet1Name')]",
				"properties": {
					"addressPrefix": "[parameters('subnet1Prefix')]"
				}
			},
			{
				"name": "[parameters('subnet2Name')]",
				"properties": {
					"addressPrefix": "[parameters('subnet2Prefix')]"
				}
			},
			{
				"name": "[parameters('subnet3Name')]",
				"properties": {
					"addressPrefix": "[parameters('subnet3Prefix')]"
				}
			},
			{
				"name": "[parameters('subnet4Name')]",
				"properties": {
					"addressPrefix": "[parameters('subnet4Prefix')]"
				}
			},
			{
				"name": "[parameters('subnet5Name')]",
				"properties": {
					"addressPrefix": "[parameters('subnet5Prefix')]"
				}
			},
			{
				"name": "[parameters('subnet6Name')]",
				"properties": {
					"addressPrefix": "[parameters('subnet6Prefix')]"
				}
			},
			{
				"name": "[parameters('subnet7Name')]",
				"properties": {
					"addressPrefix": "[parameters('subnet7Prefix')]"
				}
			}]
		}
	},
	{
		"apiVersion": "[variables('apiVersion')]",
		"type": "Microsoft.Network/networkInterfaces",
		"name": "[concat(variables('nicName'), '0')]",
		"location": "[parameters('location')]",
		"dependsOn": ["[concat('Microsoft.Network/publicIPAddresses/', variables('fwpublicIPName'))]",
		"[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"],
		"tags": {
			"displayName": "[concat('NetworkInterfaces', '0')]"
		},
		"properties": {
			"ipConfigurations": [{
				"name": "[concat('ipconfig', '0')]",
				"properties": {
					"privateIPAllocationMethod": "Dynamic",
					"publicIPAddress": {
						"id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('fwpublicIPName'))]"
					},
					"subnet": {
						"id": "[variables(concat('subnet','0','Ref'))]"
					}
				}
			}]
		}
	},
	{
		"apiVersion": "[variables('apiVersion')]",
		"type": "Microsoft.Network/networkInterfaces",
		"name": "[concat(variables('nicName'), '1')]",
		"location": "[parameters('location')]",
		"dependsOn": ["[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"],
		"tags": {
			"displayName": "[concat('NetworkInterfaces', '1')]"
		},
		"properties": {
			"enableIPForwarding": true,
			"ipConfigurations": [{
				"name": "[concat('ipconfig', '1')]",
				"properties": {
					"privateIPAllocationMethod": "Static",
					"privateIPAddress": "[variables('FWPrivateIPAddressUntrust')]",
					"subnet": {
						"id": "[variables(concat('subnet','1','Ref'))]"
					}
				}
			}]
		}
	},
	{
		"apiVersion": "[variables('apiVersion')]",
		"type": "Microsoft.Network/networkInterfaces",
		"name": "[concat(variables('nicName'), '2')]",
		"location": "[parameters('location')]",
		"dependsOn": ["[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"],
		"tags": {
			"displayName": "[concat('NetworkInterfaces', '2')]"
		},
		"properties": {
			"enableIPForwarding": true,
			"ipConfigurations": [{
				"name": "[concat('ipconfig', '2')]",
				"properties": {
					"privateIPAllocationMethod": "Static",
					"privateIPAddress": "[variables('FWPrivateIPAddressTrust')]",
					"subnet": {
						"id": "[variables(concat('subnet','2','Ref'))]"
					}
				}
			}]
		}
	},
	{
		"apiVersion": "[variables('apiVersion')]",
		"type": "Microsoft.Network/networkInterfaces",
		"name": "[concat(variables('nicName'), '3')]",
		"location": "[parameters('location')]",
		"dependsOn": ["[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"],
		"tags": {
			"displayName": "[concat('NetworkInterfaces', '3')]"
		},
		"properties": {
			"enableIPForwarding": true,
			"ipConfigurations": [{
				"name": "[concat('ipconfig', '3')]",
				"properties": {
					"privateIPAllocationMethod": "Static",
					"privateIPAddress": "[variables('FWPrivateIPAddressDMZ')]",
					"subnet": {
						"id": "[variables(concat('subnet','3','Ref'))]"
					}
				}
			}]
		}
	},
	{
		"apiVersion": "[variables('apiVersion')]",
		"type": "Microsoft.Network/networkInterfaces",
		"name": "[concat(variables('nicName'), '4')]",
		"location": "[parameters('location')]",
		"dependsOn": ["[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"],
		"tags": {
			"displayName": "[concat('NetworkInterfaces', '4')]"
		},
		"properties": {
			"enableIPForwarding": true,
			"ipConfigurations": [{
				"name": "[concat('ipconfig', '4')]",
				"properties": {
					"privateIPAllocationMethod": "Static",
					"privateIPAddress": "[variables('FWPrivateIPAddressExpressRoute')]",
					"subnet": {
						"id": "[variables(concat('subnet','4','Ref'))]"
					}
				}
			}]
		}
	},
	{
		"apiVersion": "[variables('apiVersion')]",
		"type": "Microsoft.Network/networkInterfaces",
		"name": "[concat(variables('nicName'), '5')]",
		"location": "[parameters('location')]",
		"dependsOn": ["[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"],
		"tags": {
			"displayName": "[concat('NetworkInterfaces', '5')]"
		},
		"properties": {
			"enableIPForwarding": true,
			"ipConfigurations": [{
				"name": "[concat('ipconfig', '5')]",
				"properties": {
					"privateIPAllocationMethod": "Static",
					"privateIPAddress": "[variables('FWPrivateIPAddressFuture1')]",
					"subnet": {
						"id": "[variables(concat('subnet','5','Ref'))]"
					}
				}
			}]
		}
	},
	{
		"apiVersion": "[variables('apiVersion')]",
		"type": "Microsoft.Network/networkInterfaces",
		"name": "[concat(variables('nicName'), '6')]",
		"location": "[parameters('location')]",
		"dependsOn": ["[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"],
		"tags": {
			"displayName": "[concat('NetworkInterfaces', '6')]"
		},
		"properties": {
			"enableIPForwarding": true,
			"ipConfigurations": [{
				"name": "[concat('ipconfig', '6')]",
				"properties": {
					"privateIPAllocationMethod": "Static",
					"privateIPAddress": "[variables('FWPrivateIPAddressFuture2')]",
					"subnet": {
						"id": "[variables(concat('subnet','6','Ref'))]"
					}
				}
			}]
		}
	},
	{
		"apiVersion": "[variables('apiVersion')]",
		"type": "Microsoft.Network/networkInterfaces",
		"name": "[concat(variables('nicName'), '7')]",
		"location": "[parameters('location')]",
		"dependsOn": ["[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"],
		"tags": {
			"displayName": "[concat('NetworkInterfaces', '7')]"
		},
		"properties": {
			"enableIPForwarding": true,
			"ipConfigurations": [{
				"name": "[concat('ipconfig', '7')]",
				"properties": {
					"privateIPAllocationMethod": "Static",
					"privateIPAddress": "[variables('FWPrivateIPAddressFuture3')]",
					"subnet": {
						"id": "[variables(concat('subnet','7','Ref'))]"
					}
				}
			}]
		}
	},
	{
		"name": "PAN-VM",
		"type": "Microsoft.Resources/deployments",
		"apiVersion": "2017-03-30",
		"dependsOn": ["storageAcountSetup1",
		"[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '0')]",
		"[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '1')]",
		"[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '2')]",
		"[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '3')]",
		"[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '4')]",
		"[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '5')]",
		"[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '6')]",
		"[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '7')]"],
		"properties": {
			"mode": "Incremental",
			"templateLink": {
				"uri": "[variables('vmTemplateUrl')]",
				"contentVersion": "1.0.0.0"
			},
			"parameters": {
				"location": {
					"value": "[parameters('location')]"
				},
				"vmName": {
					"value": "[parameters('vmName')]"
				},
				"imageSku": {
					"value": "[parameters('imageSku')]"
				},
				"imageOffer": {
					"value": "[variables('imageOffer')]"
				},
				"imageVersion": {
					"value": "[parameters('imageVersion')]"
				},
				"imagePublisher": {
					"value": "[variables('imagePublisher')]"
				},
				"nicName": {
					"value": "[variables('nicName')]"
				},
				"vmSize": {
					"value": "[parameters('vmSize')]"
				},
				"adminUserName": {
					"value": "[parameters('adminUserName')]"
				},
				"adminPassword": {
					"value": "[parameters('adminPassword')]"
				},
				"newStorageAccount": {
					"value": "[parameters('newStorageAccount')]"
				},
				"sshKey": {
					"value": "[parameters('sshKey')]"
				},
				"availabilitySetName": {
					"value": "[parameters('availabilitySetName')]"
				}
			}
		}
	}]
}